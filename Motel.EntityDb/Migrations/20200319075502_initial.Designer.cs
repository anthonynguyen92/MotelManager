// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Motel.EntityDb.EF;

namespace Motel.EntityDb.Migrations
{
    [DbContext(typeof(MotelDbContext))]
    [Migration("20200319075502_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Motel.EntityDb.Entities.Customer", b =>
                {
                    b.Property<string>("IDuser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Room")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDuser");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Motel.EntityDb.Entities.InforBill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ElectricBill")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IDRoom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MonthRent")
                        .HasColumnType("int");

                    b.Property<decimal>("ParkingFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RoomBil")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WaterBill")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WifiBill")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IDRoom");

                    b.ToTable("InforBills");
                });

            modelBuilder.Entity("Motel.EntityDb.Entities.Manager", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("Motel.EntityDb.Entities.MotelRoom", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<int>("BedRoom")
                        .HasColumnType("int");

                    b.Property<string>("NameRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RoomRent")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Toilet")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("MotelRooms");
                });

            modelBuilder.Entity("Motel.EntityDb.Entities.Rent", b =>
                {
                    b.Property<string>("IdRent")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IDRoom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("IDuser")
                        .HasColumnType("int");

                    b.Property<Guid?>("MotelRoomid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("IdRent");

                    b.HasIndex("MotelRoomid")
                        .IsUnique()
                        .HasFilter("[MotelRoomid] IS NOT NULL");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("Motel.EntityDb.Entities.InforBill", b =>
                {
                    b.HasOne("Motel.EntityDb.Entities.MotelRoom", "MotelRoom")
                        .WithMany("InforBills")
                        .HasForeignKey("IDRoom");
                });

            modelBuilder.Entity("Motel.EntityDb.Entities.Rent", b =>
                {
                    b.HasOne("Motel.EntityDb.Entities.Customer", "Customer")
                        .WithOne("Rent")
                        .HasForeignKey("Motel.EntityDb.Entities.Rent", "IdRent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Motel.EntityDb.Entities.MotelRoom", "MotelRoom")
                        .WithOne("Rent")
                        .HasForeignKey("Motel.EntityDb.Entities.Rent", "MotelRoomid");
                });
#pragma warning restore 612, 618
        }
    }
}
